import { Renderer, ElementRef } from '@angular/core';
import { ControlValueAccessor, Validator, AbstractControl, ValidationErrors } from '@angular/forms';
import { DomSanitizer } from '@angular/platform-browser';
export declare class MarkdownEditorComponent implements ControlValueAccessor, Validator {
    required: boolean;
    maxlength: number;
    private _renderer;
    private _domSanitizer;
    aceEditorContainer: ElementRef;
    hideToolbar: boolean;
    height: string;
    preRender: Function;
    mode: string;
    _mode: string;
    options: any;
    _options: any;
    _hideIcons: any;
    markdownValue: any;
    _markdownValue: any;
    _renderMarkTimeout: any;
    editor: any;
    showPreviewPanel: boolean;
    isFullScreen: boolean;
    _markedOpt: any;
    _previewHtml: any;
    _onChange: (_: any) => void;
    _onTouched: () => void;
    constructor(required: boolean, maxlength: number, _renderer: Renderer, _domSanitizer: DomSanitizer);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    writeValue(value: any | Array<any>): void;
    registerOnChange(fn: (_: any) => {}): void;
    registerOnTouched(fn: () => {}): void;
    validate(c: AbstractControl): ValidationErrors;
    insertContent(type: string): void;
    togglePreview(): void;
    previewPanelClick(event: Event): void;
    fullScreen(): void;
    editorResize(timeOut?: number): void;
}
